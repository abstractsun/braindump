#!/usr/bin/env bash
# braindump
# (c) abstractsun
# License: GPL version 3 or, at your option, any later version

COMPAT_SCRIPT=".scripts/editor_compat"
if [[ -f "$COMPAT_SCRIPT" ]];then
    source "$COMPAT_SCRIPT"
fi
if [[ -z "$BRAINDUMP_EDITOR" ]]; then
    BRAINDUMP_EDITOR="nano"
    function bd_open_file_line () { cat "/dev/null"; }
fi
export BRAINDUMP_EDITOR

if [[ -z "$BRAINDUMP_FILE_SUFFIX" ]]; then
    BRAINDUMP_FILE_SUFFIX=".txt"
fi

mkdir -p logs;

LOGNAME="$1"
if [[ -z "$1" || "$1" == "?" ]]; then
    LOGNAME="log"
fi
if [[ "$1" != "?" ]]; then
    shift
fi
QM="$1"

if [[ -z "$BRAINDUMP_MAX_LOGS_SUGGESTED" ]]; then
    BRAINDUMP_MAX_LOGS_SUGGESTED=6
fi

CDIR="$(pwd)"
mkdir -p logs
mkdir -p logs/archived

if [[ -n "$LOGNAME" ]]; then
    cd logs
    OLDIFS="$IFS"
    export IFS=$'\n'

    MATCHSTRING="$(find . -type f -iregex "^\\(.+\\|\\)$LOGNAME\\(.+\\|\\)$" -not -regex ".*\.swp$" -not -regex ".*~$" -not -regex ".*#$" -not -regex "^\\(.+\\|\\)archived\\(.+\\|\\)$")"
    for MATCH in $MATCHSTRING ; do
        MATCH_IDX=$(($MATCH_IDX + 1))
    done

    if [[ "$QM" == "?" && $MATCH_IDX -gt 1 ]]; then
        # Log name ambiguous - print the directory name and exit
        echo "logs/"
        exit
    elif [[ $MATCH_IDX -gt "$BRAINDUMP_MAX_LOGS_SUGGESTED" ]]; then
        # Suggest only BRAINDUMP_MAX_LOGS_SUGGESTED newest files
        MATCH_OLDER="$(($MATCH_IDX - $BRAINDUMP_MAX_LOGS_SUGGESTED))"
        if [[ $MATCH_OLDER -eq 1 ]]; then
            echo "Not suggesting $MATCH_OLDER less recently modified file"
        else
            echo "Not suggesting $MATCH_OLDER less recently modified files"
        fi
        select MATCHING in $(ls -c $MATCHSTRING | head -"$BRAINDUMP_MAX_LOGS_SUGGESTED" | sort); do break; done
    elif [[ $MATCH_IDX -gt 1 ]]; then
        select MATCHING in $(echo "$MATCHSTRING" | sort); do break; done
    else
        MATCHING="$MATCHSTRING"
    fi
    export IFS="$OLDIFS"
    cd "$CDIR"
fi

if [ -z "$MATCHING" ]; then
    LOGFILE="logs/${LOGNAME}_$(date +%Y-%m-%d)${BRAINDUMP_FILE_SUFFIX}"
else
    LOGFILE="logs/${MATCHING[0]}"
fi;

if [[ "$QM" == "?" ]]; then
    echo "$LOGFILE"
else
    if [[ "$BRAINDUMP_EDITOR" =~ vim ]]; then
        $BRAINDUMP_EDITOR "$LOGFILE" -c '$
            read !date "+"\%"Y-"\%"m-"\%"d: "\%"I:"\%"M"\%"p: "
            startinsert!'
    elif [[ "$BRAINDUMP_EDITOR_OPEN_WITH" == true ]]; then
        date "+%Y-%m-%d: %I:%M%p:" >> $LOGFILE
        LAST_LINE="`grep -c "" "$LOGFILE" `"
        bd_open_file_line "$LOGFILE" "$LAST_LINE"
    else
        date "+%Y-%m-%d: %I:%M%p:" >> $LOGFILE
        $BRAINDUMP_EDITOR "$LOGFILE"
    fi
fi
